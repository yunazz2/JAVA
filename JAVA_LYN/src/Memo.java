
/* [개념]
 - 클래스(class) : 객체를 생성하기 위한 필드와 메소드가 정의된 것. 객체의 설계도에 해당한다.
 - 메소드(method) : 어떤 일을 처리하는 실행문들을 모아 놓은 블록. 메소드를 코드 내에서 사용하는 것을 메소드 호출이라 한다.
 - 객체(object) : 물리적으로 존재하거나 추상적으로 생각할 수 있는 것 중에서 자신의 속성을 가지고 있고 다른 것과 식별 가능한 것을 말함.
	ex) 자동차, 자전거, 책, 사람 / 학과, 강의, 주문 등…
 - 자료형 : 자료의 형태. 자료형에 따라 컴퓨터가 어떻게 처리하는지 달라진다. 자바에서는 기본 타입과 참조 타입으로 구분됨
 - 인스턴스(instance) : 클래스로부터 만들어진 객체
 - 생성자(constructor) : new 연산자로 호출되는 특별한 중괄호 블록. 객체 생성 시 객체를 초과하는 역할을 한다. 메소드와 비슷하게 생겼지만, 클래스 이름으로 되어 있고 반환형이 없다. 객체 초기화란 필드를 초기화하거나, 메소드를 호출해서 객체를 사용할 준비를 하
	는 것을 말한다.
 - new : new 연산자는 객체를 Heap이라는 메모리 영역에 메모리 공간을 할당해주고 메모리주소를 반환한 후 생성자를 실행시켜준다. 리터럴과는 달리 new 연산자로 생성된 객체는 똑같은 값을 가진(?) 객체가 있어도 서로 다른 메모리를 할당하기 때문에 서로 다른 객체로 분류된다.
 - void : void의 역할은 return 되는 타입이 없음을 의미합니다. 즉 아무것도 리턴하지 않음을 선언해주는 것과 같습니다.
	
 */



/* [Memo]
 - 유저에게 이름, 나이, 키, 주소 등의 정보를 공백을 두고 입력받은 후 출력할 때 주소같은 경우는 당연히 공백이 있을 수 밖에 없으니 해당 변수 값을 출력할 때는 sc.nextLine 사용
 - return이란? 메소드를 종료하고, 메모리를 해제하며, 값을 반환한다.
 - 변수나 메소드는 카멜 케이스로 쓰고, 클래스는 파스칼 케이스로 쓴다. => 관습
 - static : 전역 변수와 전역 함수를 만들 때 활용, 메모리가 가장 먼저 할당 됨, 프로그램이 끝날 때 사라진다.
 - static 메소드는 this 사용 불가 
 - this : 생성된 객체 자기 자신
 - 일반 변수는 객체를 생성했을 때 메모리가 만들어진다.
 - final : 메소드를 재정의 하는 것을 막아준다. => 쉽게 말하자면 메이플 마법사 1차 스킬인 에너지볼트가 2차 전직해도 더 이상 업그레이드 되지 않고 그대로일 수 있도록 하는 것.
 - Scanner 메소드중 String은 sc.next()로만 받으면 된다.
 */



/* [의문점]
 - Day01_Ex04 예제 풀이중 double avg = (double)sum / 3;으로 배웠는데 내가 직접 코드를 작성해보니 double avg = sum / 3;과 결과가 같다. 근데 왜 인지 모르겠다.
 - 변수명만 알고있을 때 그 변수의 자료형이 무엇인지 알 수 있는가?
 */



/* [헷갈리는 개념]
 - Switch랑 for의 차이..
 - foreach는 어떨 때 쓰면 좋은가..
*/



/* [설정 정보]
 - window -> preferences -> Java -> typing -> Automatically insert at correct position -> semicolons 체크
*/



/** 0731
변수 유형에 따른 용도
 * - 지역 변수 : 메소드, 블록{} 내부에 선언
 * 			  {} 블록 내부에서만 사용 / 스택 영역
 * - 멤버 변수 : 클래스의 변수 선언
 * 			   클래스 내부와 private 아닌 경우 외부에서 접근 가능 / 힙 영역
 * - static 변수 : 클래스 내부에 static으로 선언
 * 				  클래스 내부, 다른 클래스에서 사용 가능 / 데이터 영역
**/
